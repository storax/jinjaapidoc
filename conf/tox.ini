[tox]
toxworkdir = {toxinidir}/../.toxjinjaapidoc
envlist =
    check,
{% for env in tox_environments|sort %}
    {{ env }},
{% endfor %}
    docs

[testenv]
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
deps =
    pytest
commands =
    {posargs:py.test -vv}

[testenv:spell]
setenv =
    SPELLCHECK = 1
commands =
    sphinx-build -b spelling docs dist/docs
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt
    sphinxcontrib-spelling
    pyenchant

[testenv:docs]
whitelist_externals =
    rm
commands =
    rm -rf dist/docs
    sphinx-build -b linkcheck docs dist/docs
    sphinx-build -b html docs dist/docs
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt
    -r{toxinidir}/requirements.txt

[testenv:configure]
deps =
    jinja2
    matrix
usedevelop = true
commands =
    python bootstrap.py

[testenv:check]
deps =
    docutils
    flake8
    collective.checkdocs
usedevelop = true
commands =
    python setup.py checkdocs
    python setup.py check --restructuredtext --strict --metadata
    flake8 src

{% for env, config in tox_environments|dictsort %}
[testenv:{{ env }}]
{% if config.cover or config.env_vars %}
setenv =
    {[testenv]setenv}
{% endif %}
{% for var in config.env_vars %}
    {{ var }}
{% endfor %}
{% if config.cover %}
    WITH_COVERAGE=yes
usedevelop = true
commands =
    {posargs:py.test -vv}
{% endif %}
deps =
    {[testenv]deps}
{% for dep in config.deps %}
    {{ dep }}
{% endfor %}

{% endfor %}

